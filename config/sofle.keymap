/*
  * Copyright (c) 2020 The ZMK Contributors
  *
  * SPDX-License-Identifier: MIT
  */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp N1         &kp N2  &kp N3        &kp N4            &kp N5          &kp N6                                  &kp N7  &kp N8         &kp N9     &kp N0            &kp MINUS         &kp EQUAL
&kp TAB        &kp Q   &kp W         &kp E             &kp R           &kp T                                   &kp Y   &kp U          &kp I      &kp O             &kp P             &kp BACKSLASH
&kp BACKSPACE  &kp A   &kp S         &kp D             &kp F           &kp G                                   &kp H   &kp J          &kp K      &kp L             &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp ESCAPE     &kp Z   &kp X         &kp C             &kp V           &kp B   &kp C_MUTE    &kp K_PLAY_PAUSE  &kp N   &kp M          &kp COMMA  &kp DOT           &kp SLASH         &kp SEMICOLON
                       &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &mo 1   &kp ENTER     &kp SPACE         &mo 2   &kp RIGHT_GUI  &kp GRAVE  &kp SINGLE_QUOTE
            >;
        };

        layer1 {
            bindings = <
&trans                                                                                       &kp F1  &kp F2     &kp F3                             &kp F4  &kp F5                    &kp F6            &kp F7             &kp F8                 &kp F9         &kp F10  &kp F11
&kp GRAVE                                                                                    &kp N1  &kp N2     &kp N3                             &kp N4  &kp N5                    &kp N6            &kp N7             &kp N8                 &kp N9         &kp N0   &kp F12
&trans KC_EXLM KC_AT KC_HASH KC_DLR KC_PERC KC_CIRC KC_AMPR KC_ASTR KC_LPRN KC_RPRN KC_PIPE  &trans  &kp EQUAL  &kp MINUS KC_PLUS KC_LCBR KC_RCBR  &trans  &trans                    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SEMICOLON KC_COLN  &kp BACKSLASH  &trans   &trans
&trans                                                                                       &trans  &trans     &trans                             &trans  &mo 3   &trans    &trans  &trans
            >;
        };

        layer2 {
            bindings = <
&trans  &trans        &trans            &trans             &trans     &trans                          &trans         &trans        &trans    &trans         &trans             &trans
&trans  &kp INSERT    &kp PRINTSCREEN   &kp K_APPLICATION  &kp F20    &kp F20                         &kp PAGE_UP    &kp LC(LEFT)  &kp UP    &kp LC(RIGHT)  &kp LC(BACKSPACE)  &kp BACKSPACE
&trans  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT     &kp F20    &kp CAPSLOCK                    &kp PAGE_DOWN  &kp LEFT      &kp DOWN  &kp RIGHT      &kp DELETE         &kp BACKSPACE
&trans  &kp LC(Z)     &kp LC(X)         &kp LC(C)          &kp LC(V)  &kp F20       &trans    &trans  &kp F20        &kp HOME      &kp F20   &kp END        &kp F20            &trans
                      &trans            &trans             &trans     &mo 3         &trans    &trans  &trans         &trans        &trans    &trans
            >;
        };

        layer3 {
            bindings = <
&kp F20                                  &kp F20         &kp F20           &kp F20            &kp F20     &kp F20                            &kp F20  &kp F20  &kp F20                                  &kp F20  &kp F20  &kp F20
&kp F20                                  &kp F20         &kp F20           &kp F20            &kp F20     &kp F20                            &kp F20  &kp F20  &kp F20                                  &kp F20  &kp F20  &kp F20
&kp F20 RGB_TOG RGB_HUI RGB_SAI RGB_VAI  &kp F20         &kp F20           &kp C_VOLUME_DOWN  &kp C_MUTE  &kp C_VOLUME_UP                    &kp F20  &kp F20  &kp F20 RGB_MOD RGB_HUD RGB_SAD RGB_VAD  &kp F20  &kp F20  &kp F20
&kp F20                                  &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT         &kp F20     &kp F20          &trans    &trans  &trans   &trans   &trans                                   &trans   &trans   &trans
                                                         &trans            &trans
            >;
        };
    };
};
